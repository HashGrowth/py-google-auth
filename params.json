{
  "name": "Py-google-auth",
  "tagline": "Headless implementation of Google web login (with support for 2-Step Verification) in Python",
  "body": "py-google-auth\r\n==============\r\n\r\n[![Join the chat at https://gitter.im/HashGrowth/py-google-auth](https://badges.gitter.im/HashGrowth/py-google-auth.svg)](https://gitter.im/HashGrowth/py-google-auth?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nHeadless implementation of Google web login (with support for 2-Step Verification) in Python\r\n\r\n`py-google-auth` exposes a high-level Python module and REST API that can be used for headless login on [Google Accounts](https://accounts.google.com/ServiceLogin). The API supports *2-step verification* if it is enabled on Google Account being used.\r\n\r\n**Note**: This project is in \"alpha\" version right now.\r\nWe are actively developing it and expect it to be beta-ready in next couple of weeks.\r\n\r\nLicense\r\n-------\r\nMIT\r\n\r\nThe license text is available in `LICENSE` file in root of this repo.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nTo install, run:    \r\n\r\n    $ pip install py-google-auth\r\n\r\n(for test):    \r\n\r\n    $ pip install -i https://testpypi.python.org/pypi --extra-index-url https://pypi.python.org/pypi py-google-auth\r\n\r\nto update the version:    \r\n\r\n    $ pip install -Ui https://testpypi.python.org/pypi --extra-index-url https://pypi.python.org/pypi py-google-auth\r\n\r\nTo be able to make requests to API, you will need a token.\r\nYou need to set it in your system environment for the API to access it and then pass it with every request you make:    \r\n\r\n    export PY_GOOGLE_AUTH_TOKEN='some_token'\r\n\r\nAlso set a path for storing log files.\r\nThese files will be created when ever some previously unhandled error will occur,\r\nin order to help debugging and fixing the problem. You can create a PR for such errors with the content of the file from your log path:    \r\n\r\n    export PY_GOOGLE_AUTH_LOG_PATH=/path/to/logs/\r\n\r\nUsage\r\n-----\r\n\r\nOpen your terminal and run:    \r\n\r\n    py-google-auth\r\n\r\nThis will start a gunicorn server, which will listen on `localhost:8001` by default. You can change host and port (run `py-google-auth -h` for information).\r\n\r\nThen you can make calls to the api using any HTTP library you like.\r\nThe [docs](http://py-google-auth.readthedocs.io/en/latest/) will contain examples with [requests](https://github.com/kennethreitz/requests).\r\n\r\nExample for an account without two factor auth enabled:    \r\n\r\n    >>> import jsonpickle\r\n    >>> import os\r\n    >>> import requests\r\n\r\n    >>> token = os.environ.get('PY_GOOGLE_AUTH_TOKEN')\r\n    >>> data = {'email': 'myemail@example.com', 'password': 'myrandompassword', 'token': token}\r\n\r\n    >>> req = requests.post('http://localhost:8001/login', json=data)\r\n    >>> req\r\n    <Respose 200>\r\n\r\n    >>> session_str = req.json()['session']\r\n    >>> session = jsonpickle.decode(session_str)\r\n    >>> google_play_page = session.get('https://play.google.com/apps/publish')\r\n    >>> google_play_page\r\n    <Respose 200>\r\n\r\n\r\n*Note:* `jsonpickle` is used to encode python objects into json, since we get an encoded string which contains a request.Session object, we need to use decode to make it an object again.\r\n\r\nMore examples with other endpoints can be found in [docs](http://py-google-auth.readthedocs.io/en/latest/).\r\n\r\n\r\nEnd points\r\n----------\r\n\r\nNormal login (without two factor auth).    \r\n\r\n    POST /login --data {'email': email, 'password': password, 'token': token}\r\n\r\nIf two factor auth is enabled, then next request should go here:    \r\n\r\n    POST /step_two_login --data {'session': session, 'method': method, 'otp': otp, 'token': token}\r\n\r\nIf you want to use alternate method for two factor, use this before `/step_two_login`:    \r\n\r\n    POST /change_method --data {'session': session, 'method': method, 'token': token}\r\n\r\nDetails about response data and status codes can be found in [docs](http://py-google-auth.readthedocs.io/en/latest/)(writing soon).\r\n\r\nSupported 2-step verification 'steps'\r\n-------------------------------------\r\n\r\nWe support following 'steps' (i.e. methods) offered by Google in [2-step verification](https://myaccount.google.com/security/signinoptions/two-step-verification):\r\n\r\n* **Voice or text message**: Verification codes are sent by text message.\r\n* **Backup codes**: 10 single-use codes are active at this time, but you can generate more as needed.\r\n* **Google prompt**: Get a Google prompt on your phone and just tap Yes to sign in.\r\n* **Authenticator app**: Use the Authenticator app to get free verification codes, even when your phone is offline. Available for Android and iPhone.\r\n* **Backup phone**: Add a backup phone so you can still sign in if you lose your phone.\r\n\r\nUnsupported 2-step verification 'step'\r\n--------------------------------------\r\nWe **DONT** support following 'step' (i.e. method):\r\n\r\n* **Security Key**: A Security Key is a small physical device used for signing in. It plugs into your computer's USB port.\r\n\r\nDocumentation\r\n-------------\r\n\r\nWe are in process of writing documentation, which will be hosted at [http://py-google-auth.readthedocs.io/en/latest/](http://py-google-auth.readthedocs.io/en/latest/).\r\n\r\nFAQs\r\n----\r\nTo be done.\r\n\r\nMaintainers/Contact\r\n-------------------\r\n\r\n* [Swati Jaiswal](https://github.com/curioswati) (Current maintainer)\r\n* If Swati isn't responding, feel free to poke [Amber Jain](https://github.com/amberj) or [Pulkit Vaishnav](https://github.com/pulkitvaishnav/).\r\n\r\nHow to Contribute\r\n-----------------\r\n1. Check for [open issues or open a fresh issue](https://github.com/HashGrowth/py-google-auth/issues) to start a discussion around a feature idea or a bug.\r\n2. Fork the repository on GitHub to start making your changes to the master branch (or branch off of it).\r\n3. Write a test which shows that the bug was fixed or that the feature works as expected.\r\n4. Send a pull request and poke the maintainer until it gets merged and published :)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}